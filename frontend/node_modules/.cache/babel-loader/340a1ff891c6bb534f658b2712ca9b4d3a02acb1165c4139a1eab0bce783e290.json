{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\Documents\\\\GitHub\\\\My_Reps\\\\register\\\\src\\\\components\\\\FormEmailAutentic\\\\FormEmailAutentic.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./FormEmailAutentic.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormEmailAutentic() {\n  _s();\n  const [autChars, setAutChars] = useState(new Array(6).fill(null));\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const inputAut = autChars.join(\"\");\n    try {\n      const response = await fetch('http://localhost:3000/autVerif', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          inputAut\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Erro na requisição');\n      }\n      const data = await response.json();\n    } catch {}\n  };\n  const handleInputChange = (event, key) => {\n    // Permitir apenas números no input\n    event.target.value = event.target.value.replace(/[^0-9]/g, '');\n    setAutChars(autChars[key] = event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Para concluir a configura\\xE7\\xE3o da conta, insira o c\\xF3digo que foi enviado para:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputField\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Emailtestw@gmail.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputsAut\",\n          children: autChars.map((char, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"autChar\",\n            maxLength: 1,\n            onInput: event => handleInputChange(event, index)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Continuar\",\n        className: \"submitBtn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(FormEmailAutentic, \"tkWhLqFzXIaAAg+DIbAIF2dd8cY=\", false, function () {\n  return [useNavigate];\n});\n_c = FormEmailAutentic;\nvar _c;\n$RefreshReg$(_c, \"FormEmailAutentic\");","map":{"version":3,"names":["React","useNavigate","useState","jsxDEV","_jsxDEV","FormEmailAutentic","_s","autChars","setAutChars","Array","fill","navigate","handleSubmit","event","preventDefault","inputAut","join","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","handleInputChange","key","target","value","replace","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","map","char","index","type","maxLength","onInput","_c","$RefreshReg$"],"sources":["C:/Users/mathe/Documents/GitHub/My_Reps/register/src/components/FormEmailAutentic/FormEmailAutentic.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./FormEmailAutentic.css\"\r\nimport {useState} from \"react\";\r\n\r\n\r\n\r\n\r\nexport default function FormEmailAutentic(){\r\n    \r\n    const [autChars, setAutChars] = useState(new Array(6).fill(null));\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async(event)=>{\r\n        event.preventDefault();\r\n        const inputAut = autChars.join(\"\");\r\n        try{\r\n            const response = await fetch('http://localhost:3000/autVerif',{\r\n                method: 'POST',\r\n                headers: {\r\n                'Content-Type': 'application/json'\r\n                 },\r\n                body:JSON.stringify({inputAut})\r\n            })\r\n\r\n            if(!response.ok){\r\n                throw new Error('Erro na requisição')\r\n            }\r\n\r\n            const data = await response.json()\r\n        }catch{\r\n\r\n        }\r\n        \r\n    }\r\n    const handleInputChange = (event, key) => {\r\n        // Permitir apenas números no input\r\n        event.target.value = event.target.value.replace(/[^0-9]/g, '');\r\n        setAutChars(autChars[key] = event.target.value);\r\n    };\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <p>Para concluir a configuração da conta, insira o código que foi enviado para:</p>\r\n                <div className=\"inputField\">\r\n                    <label htmlFor=\"email\">Emailtestw@gmail.com</label>\r\n\r\n                    \r\n                    <div className=\"inputsAut\">\r\n                        {autChars.map((char,index) => (\r\n                            <input key={index} type=\"text\" className=\"autChar\" maxLength={1} onInput={(event)=>handleInputChange(event,index)}/>\r\n                        ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <input type=\"submit\" value=\"Continuar\" className=\"submitBtn\"/>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}